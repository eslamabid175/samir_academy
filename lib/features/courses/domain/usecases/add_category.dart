import 'package:dartz/dartz.dart';
import 'package:samir_academy/core/error/failures.dart';
import 'package:samir_academy/core/usecases/usecase.dart';
import 'package:samir_academy/features/courses/domain/entities/category.dart';

import '../repositories/course_repository.dart';

// Or modify CourseRepository if categories are managed there
// import '../repositories/course_repository.dart';

class AddCategory implements UseCase<void, AddCategoryParams> {
  final CourseRepository repository;

  AddCategory(this.repository);

  @override
  Future<Either<Failure, void>> call(AddCategoryParams params) async {
    // Create a Category entity from params
    final category = Category(
      id: '', // ID will be generated by the backend
      name: params.name,
      imageUrl: params.imageUrl,
    );
    return await repository.addCategory(category);
  }
}

class AddCategoryParams {
  final String name;
  final String imageUrl;

  AddCategoryParams({required this.name, required this.imageUrl});
}

